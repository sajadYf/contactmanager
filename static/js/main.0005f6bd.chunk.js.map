{"version":3,"sources":["Context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","then","response","data","value","this","props","children","Component","Consumer","Contact","showContactInfo","delete","name","phone","email","className","style","cursor","onClick","OnShowClick","bind","float","color","OnDeleteClick","to","marginRight","Contacts","Fragment","key","Header","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","prototype","PropTypes","string","isRequired","func","AddContact","errors","event","preventDefault","newContact","post","history","push","target","onSubmit","handleSubmit","handleChange","About","NotFound","EditContact","match","params","updateContact","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0005f6bd.chunk.js","sourcesContent":["import React , {Component} from 'react'\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state , action) => {\r\n    switch (action.type) {\r\n        case \"DELETE_CONTACT\":\r\n            return  {\r\n                ...state,\r\n                contacts : state.contacts.filter(contact =>\r\n                    contact.id !== action.payload\r\n                )\r\n            };\r\n\r\n        case \"ADD_CONTACT\" :\r\n            return {\r\n                ...state,\r\n                contacts :\r\n                [action.payload , ...state.contacts]\r\n            };\r\n\r\n        case \"UPDATE_CONTACT\" :\r\n            return {\r\n                ...state,\r\n                contacts : state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            };\r\n\r\n        default :\r\n            return state\r\n    }\r\n};\r\n\r\nexport class Provider extends Component{\r\n    state = {\r\n        contacts : [],\r\n\r\n        dispatch : action => this.setState(state => reducer(state , action))\r\n    };\r\n\r\n    componentDidMount() {\r\n        axios.get('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => {\r\n                this.setState({\r\n                    contacts : response.data\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react';\r\nimport {Consumer} from \"../../Context\";\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showContactInfo: false\r\n        }\r\n    }\r\n\r\n\r\n    OnShowClick(){\r\n        this.setState({\r\n            showContactInfo : !this.state.showContactInfo\r\n        })\r\n    }\r\n\r\n    OnDeleteClick(id , dispatch){\r\n        axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n            .then(response =>\r\n            dispatch({type : \"DELETE_CONTACT\" , payload:id})\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const {id , name , phone , email} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-2\">\r\n                            <h4>\r\n                                {name}{' '}\r\n                                <i style={{cursor : 'pointer'}} onClick={this.OnShowClick.bind(this)} className=\"fa fa-sort-down\"> </i>\r\n                                <i\r\n                                    className=\"fa fa-times\"\r\n                                    style={{float : 'right', color : 'red' , cursor : 'pointer'\r\n                                    }} onClick={this.OnDeleteClick.bind(this ,  id , dispatch)}>\r\n                                </i>\r\n                                <Link to={`/contact/${id}`}>\r\n                                    <i\r\n                                        style={{cursor : 'pointer' ,\r\n                                            float : 'right',\r\n                                            color : 'black',\r\n                                            marginRight : '1rem'\r\n                                        }}\r\n                                        className=\"fa fa-pencil\">\r\n                                    </i>\r\n                                </Link>\r\n                            </h4>\r\n\r\n                            {showContactInfo ? (\r\n\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">\r\n                                        Email : {email}\r\n                                    </li>\r\n                                    <li className=\"list-group-item\">\r\n                                        Phone : {phone}\r\n                                    </li>\r\n                                </ul>\r\n                            ) : null }\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, {Component} from 'react';\r\nimport Contact from \"./Contact\";\r\nimport {Consumer} from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-4\">\r\n                                <span className=\"text-danger\">Contact</span> List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm bg-danger navbar-dark mb-3 py-0\">\r\n                    <div className=\"container\">\r\n                        <Link to=\"/\" className=\"navbar-brand\">\r\n                            ContactManager\r\n                        </Link>\r\n                    </div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/\">\r\n                                <i className=\"fa fa-home\"> </i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/contact/add\">\r\n                                <i className=\"fa fa-plus\"> </i> Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">\r\n                                <i className=\"fa fa-question\"> </i> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React  from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    type,\r\n    value,\r\n    placeholder,\r\n    onChange,\r\n    error\r\n}) => {\r\n  return (\r\n      <div className=\"form-group\">\r\n          <label htmlFor={name}> {label}</label>\r\n          <input\r\n              type={type}\r\n              className={classnames('form-control form-control-lg' , {\r\n                  'is-invalid' : error\r\n              })}\r\n              name={name}\r\n              placeholder={placeholder}\r\n              value={value}\r\n              onChange={onChange}\r\n          />\r\n          {error && <div className=\"invalid-feedback\">\r\n              {error}\r\n          </div>}\r\n      </div>\r\n  )\r\n};\r\n\r\nTextInputGroup.prototype = {\r\n    name : PropTypes.string.isRequired,\r\n    label : PropTypes.string.isRequired,\r\n    type : PropTypes.string.isRequired,\r\n    value : PropTypes.string.isRequired,\r\n    placeholder : PropTypes.string.isRequired,\r\n    onChange : PropTypes.func.isRequired,\r\n    error:PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default TextInputGroup","import React, {Component} from 'react';\r\nimport {Consumer} from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from 'axios'\r\n\r\n\r\nclass AddContact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name : '',\r\n            email : '',\r\n            phone : '',\r\n            errors : {}\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleSubmit(dispatch , event ){\r\n        event.preventDefault();\r\n        const { name , email , phone} = this.state;\r\n\r\n        if(name === ''){\r\n            this.setState({\r\n                errors : { name : 'name is required'},\r\n            });\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({\r\n                errors : { email : 'email is required'}\r\n            });\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({\r\n                errors : { phone : 'phone is required'}\r\n            });\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone,\r\n        };\r\n\r\n        axios.post('https://jsonplaceholder.typicode.com/users' , newContact)\r\n            .then(response =>\r\n                dispatch({\r\n                    type : \"ADD_CONTACT\",\r\n                    payload : response.data\r\n                })\r\n            );\r\n\r\n\r\n\r\n        this.setState({\r\n            name : '',\r\n            email : '',\r\n            phone : '',\r\n            errors : {}\r\n        });\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n     const  {errors ,name , email , phone} = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                AddContact\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.handleSubmit.bind(this , dispatch)}>\r\n                                    <TextInputGroup\r\n                                    label=\"name\"\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    value={name}\r\n                                    placeholder=\"Enter name ...\"\r\n                                    onChange={this.handleChange.bind(this)}\r\n                                    error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        value={email}\r\n                                        placeholder=\"Enter email ...\"\r\n                                        onChange={this.handleChange.bind(this)}\r\n                                        error={errors.email}\r\n                                    />\r\n                                        <TextInputGroup\r\n                                            label=\"phone\"\r\n                                            type=\"text\"\r\n                                            name=\"phone\"\r\n                                            value={phone}\r\n                                            placeholder=\"Enter phone ...\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            error={errors.phone}\r\n                                        />\r\n                                    <input type=\"submit\" className=\"btn btn-danger btn-block\" value=\"Add Contact\"/>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, {Component} from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4\">About Contact Manager</h1>\r\n                <p className=\"lead\">simple app to contact manager</p>\r\n                <p className=\"text-secondary\">Version 1.0.0</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, {Component} from 'react';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4\"><span className=\"text-danger\">404</span>  not <span className=\"text-warning\">found</span></h1>\r\n                <p className=\"lead\">this page does not exist</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React, {Component} from 'react';\r\nimport {Consumer} from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from 'axios'\r\n\r\n\r\nclass EditContact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name : '',\r\n            email : '',\r\n            phone : '',\r\n            errors : {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n            .then(response => {\r\n                const contact = response.data;\r\n                this.setState({\r\n                    name : contact.name,\r\n                    email : contact.email,\r\n                    phone : contact.phone\r\n                })\r\n            })\r\n    }\r\n\r\n\r\n    handleSubmit(dispatch , event ){\r\n        event.preventDefault();\r\n        const { name , email , phone} = this.state;\r\n\r\n        if(name === ''){\r\n            this.setState({\r\n                errors : { name : 'name is required'},\r\n            });\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({\r\n                errors : { email : 'email is required'}\r\n            });\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({\r\n                errors : { phone : 'phone is required'}\r\n            });\r\n            return;\r\n        }\r\n\r\n        // EditContact\r\n        const updateContact = {\r\n            name,\r\n            email,\r\n            phone,\r\n        };\r\n        const { id } = this.props.match.params;\r\n        axios.put(`https://jsonplaceholder.typicode.com/users/${id}` , updateContact)\r\n            .then(response => dispatch({\r\n                type : \"UPDATE_CONTACT\",\r\n                payload : response.data\r\n        }));\r\n\r\n\r\n\r\n        this.setState({\r\n            name : '',\r\n            email : '',\r\n            phone : '',\r\n            errors : {}\r\n        });\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const  {errors ,name , email , phone} = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                EditContact\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.handleSubmit.bind(this , dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"name\"\r\n                                        type=\"text\"\r\n                                        name=\"name\"\r\n                                        value={name}\r\n                                        placeholder=\"Enter name ...\"\r\n                                        onChange={this.handleChange.bind(this)}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"email\"\r\n                                        type=\"email\"\r\n                                        name=\"email\"\r\n                                        value={email}\r\n                                        placeholder=\"Enter email ...\"\r\n                                        onChange={this.handleChange.bind(this)}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"phone\"\r\n                                        type=\"text\"\r\n                                        name=\"phone\"\r\n                                        value={phone}\r\n                                        placeholder=\"Enter phone ...\"\r\n                                        onChange={this.handleChange.bind(this)}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input type=\"submit\" className=\"btn btn-danger btn-block\" value=\"Update Contact\"/>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\nimport {HashRouter as Router, Switch, Route,} from \"react-router-dom\";\nimport './App.css';\nimport {Provider} from './Context'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nfunction App() {\n  return (\n    <Provider>\n        <Router>\n            <div className=\"App\">\n                <Header/>\n                <div className=\"container\">\n                    <Switch>\n                        <Route exact path=\"/\" component={Contacts}/>\n                        <Route path=\"/contact/add\" component={AddContact}/>\n                        <Route path=\"/contact/:id\" component={EditContact}/>\n                        <Route path=\"/about\" component={About}/>\n                        <Route component={NotFound}/>\n                    </Switch>\n                </div>\n            </div>\n        </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}